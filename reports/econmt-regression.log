Traceback (most recent call last):
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Estimate binsreg
br_est = binscatter(x='age', y='sales', w=['products'], by="online", data=sales, ci=(3,3))
br_est["online"] = br_est["online"].astype("category")
# plot the two groups
fig, ax = plt.subplots(figsize=(7, 5))

sns_plot = (
    so.Plot(br_est, x="age", y="sales", color="online")
    .add(so.Dots(pointsize=7))
)
for value in br_est["online"].unique():
    ax.errorbar('age', 'sales', yerr='ci', data=br_est.loc[br_est["online"]==value], ls='', lw=2, alpha=0.2)
ax.set_title("Binscatter: sales as a function of age conditioned on products", size=16)
sns_plot.on(ax).show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Input [0;32mIn [78][0m, in [0;36m<cell line: 14>[0;34m()[0m
[1;32m     12[0m     ax[38;5;241m.[39merrorbar([38;5;124m'[39m[38;5;124mage[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124msales[39m[38;5;124m'[39m, yerr[38;5;241m=[39m[38;5;124m'[39m[38;5;124mci[39m[38;5;124m'[39m, data[38;5;241m=[39mbr_est[38;5;241m.[39mloc[br_est[[38;5;124m"[39m[38;5;124monline[39m[38;5;124m"[39m][38;5;241m==[39mvalue], ls[38;5;241m=[39m[38;5;124m'[39m[38;5;124m'[39m, lw[38;5;241m=[39m[38;5;241m2[39m, alpha[38;5;241m=[39m[38;5;241m0.2[39m)
[1;32m     13[0m ax[38;5;241m.[39mset_title([38;5;124m"[39m[38;5;124mBinscatter: sales as a function of age conditioned on products[39m[38;5;124m"[39m, size[38;5;241m=[39m[38;5;241m16[39m)
[0;32m---> 14[0m [43msns_plot[49m[38;5;241;43m.[39;49m[43mon[49m[43m([49m[43max[49m[43m)[49m[38;5;241;43m.[39;49m[43mshow[49m[43m([49m[43m)[49m

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_core/plot.py:813[0m, in [0;36mPlot.show[0;34m(self, **kwargs)[0m
[1;32m    796[0m [38;5;124;03m"""[39;00m
[1;32m    797[0m [38;5;124;03mCompile the plot and display it by hooking into pyplot.[39;00m
[1;32m    798[0m 
[0;32m   (...)[0m
[1;32m    805[0m 
[1;32m    806[0m [38;5;124;03m"""[39;00m
[1;32m    807[0m [38;5;66;03m# TODO make pyplot configurable at the class level, and when not using,[39;00m
[1;32m    808[0m [38;5;66;03m# import IPython.display and call on self to populate cell output?[39;00m
[1;32m    809[0m 
[1;32m    810[0m [38;5;66;03m# Keep an eye on whether matplotlib implements "attaching" an existing[39;00m
[1;32m    811[0m [38;5;66;03m# figure to pyplot: https://github.com/matplotlib/matplotlib/pull/14024[39;00m
[0;32m--> 813[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mplot[49m[43m([49m[43mpyplot[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m[38;5;241m.[39mshow([38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_core/plot.py:820[0m, in [0;36mPlot.plot[0;34m(self, pyplot)[0m
[1;32m    816[0m [38;5;124;03m"""[39;00m
[1;32m    817[0m [38;5;124;03mCompile the plot spec and return the Plotter object.[39;00m
[1;32m    818[0m [38;5;124;03m"""[39;00m
[1;32m    819[0m [38;5;28;01mwith[39;00m theme_context([38;5;28mself[39m[38;5;241m.[39m_theme_with_defaults()):
[0;32m--> 820[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_plot[49m[43m([49m[43mpyplot[49m[43m)[49m

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_core/plot.py:850[0m, in [0;36mPlot._plot[0;34m(self, pyplot)[0m
[1;32m    848[0m [38;5;66;03m# Process the data for each layer and add matplotlib artists[39;00m
[1;32m    849[0m [38;5;28;01mfor[39;00m layer [38;5;129;01min[39;00m layers:
[0;32m--> 850[0m     [43mplotter[49m[38;5;241;43m.[39;49m[43m_plot_layer[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mlayer[49m[43m)[49m
[1;32m    852[0m [38;5;66;03m# Add various figure decorations[39;00m
[1;32m    853[0m plotter[38;5;241m.[39m_make_legend([38;5;28mself[39m)

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_core/plot.py:1350[0m, in [0;36mPlotter._plot_layer[0;34m(self, p, layer)[0m
[1;32m   1347[0m     grouping_vars [38;5;241m=[39m mark[38;5;241m.[39m_grouping_props [38;5;241m+[39m default_grouping_vars
[1;32m   1348[0m     split_generator [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_setup_split_generator(grouping_vars, df, subplots)
[0;32m-> 1350[0m     [43mmark[49m[38;5;241;43m.[39;49m[43m_plot[49m[43m([49m[43msplit_generator[49m[43m,[49m[43m [49m[43mscales[49m[43m,[49m[43m [49m[43morient[49m[43m)[49m
[1;32m   1352[0m [38;5;66;03m# TODO is this the right place for this?[39;00m
[1;32m   1353[0m [38;5;28;01mfor[39;00m view [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_subplots:

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_marks/dot.py:71[0m, in [0;36mDotBase._plot[0;34m(self, split_gen, scales, orient)[0m
[1;32m     68[0m [38;5;28;01mfor[39;00m _, data, ax [38;5;129;01min[39;00m split_gen():
[1;32m     70[0m     offsets [38;5;241m=[39m np[38;5;241m.[39mcolumn_stack([data[[38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m], data[[38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m]])
[0;32m---> 71[0m     data [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_resolve_properties[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mscales[49m[43m)[49m
[1;32m     73[0m     points [38;5;241m=[39m mpl[38;5;241m.[39mcollections[38;5;241m.[39mPathCollection(
[1;32m     74[0m         offsets[38;5;241m=[39moffsets,
[1;32m     75[0m         paths[38;5;241m=[39mdata[[38;5;124m"[39m[38;5;124mpath[39m[38;5;124m"[39m],
[0;32m   (...)[0m
[1;32m     83[0m         [38;5;241m*[39m[38;5;241m*[39m[38;5;28mself[39m[38;5;241m.[39martist_kws,
[1;32m     84[0m     )
[1;32m     85[0m     ax[38;5;241m.[39madd_collection(points)

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_marks/dot.py:187[0m, in [0;36mDots._resolve_properties[0;34m(self, data, scales)[0m
[1;32m    185[0m [38;5;28;01mdef[39;00m [38;5;21m_resolve_properties[39m([38;5;28mself[39m, data, scales):
[0;32m--> 187[0m     resolved [38;5;241m=[39m [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43m_resolve_properties[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mscales[49m[43m)[49m
[1;32m    188[0m     resolved[[38;5;124m"[39m[38;5;124mlinewidth[39m[38;5;124m"[39m] [38;5;241m=[39m resolved[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124mstroke[39m[38;5;124m"[39m)
[1;32m    189[0m     resolved[[38;5;124m"[39m[38;5;124mfacecolor[39m[38;5;124m"[39m] [38;5;241m=[39m resolve_color([38;5;28mself[39m, data, [38;5;124m"[39m[38;5;124mfill[39m[38;5;124m"[39m, scales)

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_marks/dot.py:49[0m, in [0;36mDotBase._resolve_properties[0;34m(self, data, scales)[0m
[1;32m     47[0m [38;5;28;01mdef[39;00m [38;5;21m_resolve_properties[39m([38;5;28mself[39m, data, scales):
[0;32m---> 49[0m     resolved [38;5;241m=[39m [43mresolve_properties[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mscales[49m[43m)[49m
[1;32m     50[0m     resolved[[38;5;124m"[39m[38;5;124mpath[39m[38;5;124m"[39m] [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_resolve_paths(resolved)
[1;32m     51[0m     resolved[[38;5;124m"[39m[38;5;124msize[39m[38;5;124m"[39m] [38;5;241m=[39m resolved[[38;5;124m"[39m[38;5;124mpointsize[39m[38;5;124m"[39m] [38;5;241m*[39m[38;5;241m*[39m [38;5;241m2[39m

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_marks/base.py:228[0m, in [0;36mresolve_properties[0;34m(mark, data, scales)[0m
[1;32m    224[0m [38;5;28;01mdef[39;00m [38;5;21mresolve_properties[39m(
[1;32m    225[0m     mark: Mark, data: DataFrame, scales: [38;5;28mdict[39m[[38;5;28mstr[39m, Scale]
[1;32m    226[0m ) [38;5;241m-[39m[38;5;241m>[39m [38;5;28mdict[39m[[38;5;28mstr[39m, Any]:
[0;32m--> 228[0m     props [38;5;241m=[39m {
[1;32m    229[0m         name: mark[38;5;241m.[39m_resolve(data, name, scales) [38;5;28;01mfor[39;00m name [38;5;129;01min[39;00m mark[38;5;241m.[39m_mappable_props
[1;32m    230[0m     }
[1;32m    231[0m     [38;5;28;01mreturn[39;00m props

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_marks/base.py:229[0m, in [0;36m<dictcomp>[0;34m(.0)[0m
[1;32m    224[0m [38;5;28;01mdef[39;00m [38;5;21mresolve_properties[39m(
[1;32m    225[0m     mark: Mark, data: DataFrame, scales: [38;5;28mdict[39m[[38;5;28mstr[39m, Scale]
[1;32m    226[0m ) [38;5;241m-[39m[38;5;241m>[39m [38;5;28mdict[39m[[38;5;28mstr[39m, Any]:
[1;32m    228[0m     props [38;5;241m=[39m {
[0;32m--> 229[0m         name: [43mmark[49m[38;5;241;43m.[39;49m[43m_resolve[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mname[49m[43m,[49m[43m [49m[43mscales[49m[43m)[49m [38;5;28;01mfor[39;00m name [38;5;129;01min[39;00m mark[38;5;241m.[39m_mappable_props
[1;32m    230[0m     }
[1;32m    231[0m     [38;5;28;01mreturn[39;00m props

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_marks/base.py:175[0m, in [0;36mMark._resolve[0;34m(self, data, name, scales)[0m
[1;32m    173[0m     feature [38;5;241m=[39m data[name]
[1;32m    174[0m [38;5;28;01melse[39;00m:
[0;32m--> 175[0m     feature [38;5;241m=[39m [43mscales[49m[43m[[49m[43mname[49m[43m][49m[43m([49m[43mdata[49m[43m[[49m[43mname[49m[43m][49m[43m)[49m
[1;32m    176[0m [38;5;28;01mif[39;00m return_array:
[1;32m    177[0m     feature [38;5;241m=[39m np[38;5;241m.[39masarray(feature)

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_core/scales.py:124[0m, in [0;36mScale.__call__[0;34m(self, data)[0m
[1;32m    122[0m [38;5;28;01mfor[39;00m func [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_pipeline:
[1;32m    123[0m     [38;5;28;01mif[39;00m func [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 124[0m         trans_data [38;5;241m=[39m [43mfunc[49m[43m([49m[43mtrans_data[49m[43m)[49m
[1;32m    126[0m [38;5;28;01mif[39;00m scalar_data:
[1;32m    127[0m     [38;5;28;01mreturn[39;00m trans_data[[38;5;241m0[39m]

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/seaborn/_core/scales.py:217[0m, in [0;36mNominal._setup.<locals>.convert_units[0;34m(x)[0m
[1;32m    215[0m keep [38;5;241m=[39m np[38;5;241m.[39marray([x_ [38;5;129;01min[39;00m units_seed [38;5;28;01mfor[39;00m x_ [38;5;129;01min[39;00m x], [38;5;28mbool[39m)
[1;32m    216[0m out [38;5;241m=[39m np[38;5;241m.[39mfull([38;5;28mlen[39m(x), np[38;5;241m.[39mnan)
[0;32m--> 217[0m out[keep] [38;5;241m=[39m axis[38;5;241m.[39mconvert_units([43mstringify[49m[43m([49m[43mx[49m[43m[[49m[43mkeep[49m[43m][49m[43m)[49m)
[1;32m    218[0m [38;5;28;01mreturn[39;00m out

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/numpy/lib/function_base.py:2328[0m, in [0;36mvectorize.__call__[0;34m(self, *args, **kwargs)[0m
[1;32m   2325[0m     vargs [38;5;241m=[39m [args[_i] [38;5;28;01mfor[39;00m _i [38;5;129;01min[39;00m inds]
[1;32m   2326[0m     vargs[38;5;241m.[39mextend([kwargs[_n] [38;5;28;01mfor[39;00m _n [38;5;129;01min[39;00m names])
[0;32m-> 2328[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_vectorize_call[49m[43m([49m[43mfunc[49m[38;5;241;43m=[39;49m[43mfunc[49m[43m,[49m[43m [49m[43margs[49m[38;5;241;43m=[39;49m[43mvargs[49m[43m)[49m

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/numpy/lib/function_base.py:2406[0m, in [0;36mvectorize._vectorize_call[0;34m(self, func, args)[0m
[1;32m   2404[0m     res [38;5;241m=[39m func()
[1;32m   2405[0m [38;5;28;01melse[39;00m:
[0;32m-> 2406[0m     ufunc, otypes [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_ufunc_and_otypes[49m[43m([49m[43mfunc[49m[38;5;241;43m=[39;49m[43mfunc[49m[43m,[49m[43m [49m[43margs[49m[38;5;241;43m=[39;49m[43margs[49m[43m)[49m
[1;32m   2408[0m     [38;5;66;03m# Convert args to object arrays first[39;00m
[1;32m   2409[0m     inputs [38;5;241m=[39m [asanyarray(a, dtype[38;5;241m=[39m[38;5;28mobject[39m) [38;5;28;01mfor[39;00m a [38;5;129;01min[39;00m args]

File [0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/numpy/lib/function_base.py:2362[0m, in [0;36mvectorize._get_ufunc_and_otypes[0;34m(self, func, args)[0m
[1;32m   2360[0m args [38;5;241m=[39m [asarray(arg) [38;5;28;01mfor[39;00m arg [38;5;129;01min[39;00m args]
[1;32m   2361[0m [38;5;28;01mif[39;00m builtins[38;5;241m.[39many(arg[38;5;241m.[39msize [38;5;241m==[39m [38;5;241m0[39m [38;5;28;01mfor[39;00m arg [38;5;129;01min[39;00m args):
[0;32m-> 2362[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m'[39m[38;5;124mcannot call `vectorize` on size 0 inputs [39m[38;5;124m'[39m
[1;32m   2363[0m                      [38;5;124m'[39m[38;5;124munless `otypes` is set[39m[38;5;124m'[39m)
[1;32m   2365[0m inputs [38;5;241m=[39m [arg[38;5;241m.[39mflat[[38;5;241m0[39m] [38;5;28;01mfor[39;00m arg [38;5;129;01min[39;00m args]
[1;32m   2366[0m outputs [38;5;241m=[39m func([38;5;241m*[39minputs)

[0;31mValueError[0m: cannot call `vectorize` on size 0 inputs unless `otypes` is set
ValueError: cannot call `vectorize` on size 0 inputs unless `otypes` is set

